#!/usr/bin/env bash

function install_command_line_tools {
  if pkgutil --pkg-info=com.apple.pkg.CLTools_Executables &> /dev/null; then
    return
  fi

  echo "To install the OS X Command Line Tools, click on the install button on the dialogue that appears."
  echo -en "\tPress enter to continue... "
  read

  xcode-select --install

  echo -en "\tPress enter when the installation is complete."
  read

  if pkgutil --pkg-info=com.apple.pkg.CLTools_Executables &> /dev/null; then
    success "Done installing OS X Command Line Tools."
  else
    fail "Command line tools not found."
  fi
}

function install_homebrew {
  if ! hash brew &> /dev/null; then
    echo "Installing Homebrew"
    (cd ~; echo -e "\n" | ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" &> /dev/null)
    success "Done installing Homebrew"
  fi
}

function install_oh_my_zsh {
  if [ ! -n "$ZSH" ]; then
    ZSH=$HOME/.oh-my-zsh
  fi

  if [ ! -d "$ZSH" ]; then
    echo "Installing Oh My Zsh"
    (cd ~; echo -e "\n" | sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" &> /dev/null)
    success "Done installing Oh My Zsh"
  fi
}

function install_dotfiles {
  current_path="${PWD}"
  current_dir="${PWD##*/}"
  exec_path=${0%/*}

  if [ ${exec_path} == "./dotfiles" ]; then
    cd dotfiles
  elif [ ${exec_path} != "." ]; then
    fail "Change directories to where you cloned dotfiles"
  fi

  git pull origin master
  echo

  for file in "aliases" "exports" "functions" "gitconfig" "gitmessage" "inputrc" "zshrc"; do
    complete_file_path=${current_path}/$(basename ${exec_path})/${file}

    if [ -f ${complete_file_path} ]; then

      symlink=$HOME/.${file}
      if [ ! -h ${symlink} ]; then
        ln -sFv ${complete_file_path} ${symlink}
      fi
    fi

  done
  unset file
  success "Done symlinking dotfiles to your home directory"

  if [ ! -d $HOME/bin ]; then
    mkdir -p $HOME/bin
  fi

  for file in ${current_path}/$(basename ${exec_path})/bin/*; do
    symlink=$HOME/bin/$(basename ${file})

    if [ ! -h ${symlink} ]; then
      ln -sFv ${file} ${symlink}
      chmod +x ${symlink}
    fi
  done
  unset file
  success "Done symlinking custom commands to your home bin directory"

  read -p "Do you want to load new shell colors? (y/n) " -n 1
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    options=( $(find ${current_path}/$(basename ${exec_path})/itermcolors -name "*.itermcolors" -maxdepth 1 -print0 | xargs -0) )
    select opt in "${options[@]}" "None"; do 
      if (( REPLY == 1 + ${#options[@]} )); then
        exit
      elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
        open $opt
        break
      fi
    done    
  fi
}

function success () {
  echo -e "[ \033[00;32mOK\033[0m ] $1\n"
}

function fail () {
  echo -e "[\033[0;31mFAIL\033[0m] $1\n"
  exit
}

install_command_line_tools
install_homebrew
install_oh_my_zsh

if [ "$1" == "--force" -o "$1" == "-f" -o "$1" == "-yes" -o "$1" == "-y" ]; then
  install_dotfiles
else
  read -p "This will overwrite any matching existing files in your home directory with symlinks. Are you sure? (y/n) " -n 1
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    install_dotfiles
  fi
fi

# source $HOME/.zshrc
